檢查 git版本
git --version

檢查git基本設定
git config --list

git config --global user.name "Felix"

git config --global user.email "mimiyoyo1001@gmail.com"

切換目錄
cd D:

ls -al

cd GITAPP

回上一個目錄
cd.. 

此資料夾受git版本控制 生成.git隱藏資料夾
git init

檢視目前此資料夾git狀態
git status

把此檔案受git控管 第一次加入的話狀態會改變暫存區狀態
git add <file>
git add *.html
git add --all
git add .

檔案改變到本機儲存區
git commit -m "init commit"

所有工作檔案到本機儲存區
git commit -m "create all files"

====================================
#為什麼兩次
1.類似倉庫倉管的功能
2.逐筆確認
3.code review

什麼時候commit
1.沒有一定
2.一個階段結束
3.一天至少一次
====================================

一次執行add&commit 從工作區移動至本機儲存區
使用前提是檔案曾經被git控管
git commit -a -m "update a.html2"
git commit -am "update a.html2"

修改最近一次commit內容
git commit --amend -m "test"

離開vim文字編輯器
:q 離開

查詢打過的指令
git log --oneline

把最近一次異動紀錄新增到最近一次commit
git commit --amend --no-edit

修改檔案後"還沒有"加到暫存區前 會復原異動前狀態
git restore b.html

修改檔案後已經加入到暫存區 會移動至工作區並保留異動的狀態 二次確認
git restore --staged a.html

把檔案設成不給git控管
git rm --cached

通常不想被控管 就紀錄在.gitignore

工作區異動做比較
git diff

暫存區跟本機儲存區比較
git diff --staged

輸出異動文字檔
git diff>page.diff

列出所有的歷史紀錄
git reflog

檔案移動到暫存區
git reset --soft

版本變更指定commit並會異動程式 *會變更程式
git reset --hard<>

git reset HEAD~5

git reset <commit>