檢查 git版本
git --version

檢查git基本設定
git config --list

git config --global user.name "Felix"

git config --global user.email "mimiyoyo1001@gmail.com"

切換目錄
cd D:

ls -al

cd GITAPP

回上一個目錄
cd.. 

此資料夾受git版本控制 生成.git隱藏資料夾
git init

檢視目前此資料夾git狀態
git status

把此檔案受git控管 第一次加入的話狀態會改變暫存區狀態
git add <file>
git add *.html
git add --all
git add .

檔案改變到本機儲存區
git commit -m "init commit"

所有工作檔案到本機儲存區
git commit -m "create all files"

====================================
#為什麼兩次
1.類似倉庫倉管的功能
2.逐筆確認
3.code review

什麼時候commit
1.沒有一定
2.一個階段結束
3.一天至少一次
====================================

一次執行add&commit 從工作區移動至本機儲存區
使用前提是檔案曾經被git控管
git commit -a -m "update a.html2"
git commit -am "update a.html2"

修改最近一次commit內容
git commit --amend -m "test"

離開vim文字編輯器
:q 離開

查詢打過的指令
git log --oneline

把最近一次異動紀錄新增到最近一次commit
git commit --amend --no-edit

修改檔案後"還沒有"加到暫存區前 會復原異動前狀態
git restore b.html

修改檔案後已經加入到暫存區 會移動至工作區並保留異動的狀態 二次確認
git restore --staged a.html

把檔案設成不給git控管
git rm --cached

通常不想被控管 就紀錄在.gitignore

工作區異動做比較
git diff

暫存區跟本機儲存區比較
git diff --staged

輸出異動文字檔
git diff>page.diff

列出所有的歷史紀錄
git reflog

檔案移動到暫存區
git reset --soft

版本變更指定commit並會異動程式 *會變更程式
git reset --hard<>

git reset HEAD~5

git reset <commit>

檢視分支
git branch

創建分支
git branch cat

要去哪個分支
git checkout cat
git switch cat

建立並同時切換
git checkout -b
git switch -c

合併分支
先切換到你要合併的主分支
git merge dog

砍掉分支
git branch -d dog

分支改名字
git branch -M main

取名字
git remote add origin https://github.com/mimiyoyo1001/gitapp16.git

檢視遠端狀態
git remote -v

選擇要push什麼分支
git push origin main

拉專案下來
git pull origin main

建議每個專案都要有README.md 及 .gitignore
README.md是簡介你專案的文件
.gitignore那些檔案是非必要不須git控管
例如個人開發工具設定或環境設定等

1.設定遠端儲存區金鑰
1-1.github生成金鑰
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
1-2.重新設定遠端儲存區(有金鑰版)
git remote set-url origin https://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@github.com/mimiyoyo1001/gitapp16.git

2.github pull request PR
2-1.fork 原始專案
2-2.git clone url
2-3.修改你的分支下的檔案
	git commit -am "message"
2-4.push回你的檔案
	git push origin main
5.發PR給原專案作者
6.原作確認PR
	